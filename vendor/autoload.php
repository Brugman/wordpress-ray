<?php

// scoper-autoload.php @generated by PhpScoper

// Backup the autoloaded Composer files
if (isset($GLOBALS['__composer_autoload_files'])) {
    $existingComposerAutoloadFiles = $GLOBALS['__composer_autoload_files'];
}



// autoload.php @generated by Composer

if (PHP_VERSION_ID < 50600) {
    if (!headers_sent()) {
        header('HTTP/1.1 500 Internal Server Error');
    }
    $err = 'Composer 2.3.0 dropped support for autoloading on PHP <5.6 and you are running '.PHP_VERSION.', please upgrade PHP or use Composer 2.2 LTS via "composer self-update --2.2". Aborting.'.PHP_EOL;
    if (!ini_get('display_errors')) {
        if (PHP_SAPI === 'cli' || PHP_SAPI === 'phpdbg') {
            fwrite(STDERR, $err);
        } elseif (!headers_sent()) {
            echo $err;
        }
    }
    trigger_error(
        $err,
        E_USER_ERROR
    );
}

require_once __DIR__ . '/composer/autoload_real.php';

$loader =  ComposerAutoloaderInit96802fbd89b8c95540ab6e020b618b61::getLoader();

// Ensure InstalledVersions is available
require_once __DIR__.'/composer/InstalledVersions.php';

// Restore the backup
if (isset($existingComposerAutoloadFiles)) {
    $GLOBALS['__composer_autoload_files'] = $existingComposerAutoloadFiles;
} else {
    unset($GLOBALS['__composer_autoload_files']);
}

// Class aliases. For more information see:
// https://github.com/humbug/php-scoper/blob/master/docs/further-reading.md#class-aliases
function humbug_phpscoper_expose_class(string $exposed, string $prefixed): void {
    if (!class_exists($exposed, false) && !interface_exists($exposed, false) && !trait_exists($exposed, false)) {
        spl_autoload_call($prefixed);
    }
}
humbug_phpscoper_expose_class('ComposerAutoloaderInit96802fbd89b8c95540ab6e020b618b61', 'Spatie\WordPressRay\ComposerAutoloaderInit96802fbd89b8c95540ab6e020b618b61');
humbug_phpscoper_expose_class('ValueError', 'Spatie\WordPressRay\ValueError');
humbug_phpscoper_expose_class('Stringable', 'Spatie\WordPressRay\Stringable');

// Function aliases. For more information see:
// https://github.com/humbug/php-scoper/blob/master/docs/further-reading.md#function-aliases
if (!function_exists('app')) { function app() { return \Spatie\WordPressRay\app(...func_get_args()); } }
if (!function_exists('assertArgs')) { function assertArgs() { return \Spatie\WordPressRay\assertArgs(...func_get_args()); } }
if (!function_exists('base_path')) { function base_path() { return \Spatie\WordPressRay\base_path(...func_get_args()); } }
if (!function_exists('dd')) { function dd() { return \Spatie\WordPressRay\dd(...func_get_args()); } }
if (!function_exists('dump')) { function dump() { return \Spatie\WordPressRay\dump(...func_get_args()); } }
if (!function_exists('ensureDirExists')) { function ensureDirExists() { return \Spatie\WordPressRay\ensureDirExists(...func_get_args()); } }
if (!function_exists('execCmd')) { function execCmd() { return \Spatie\WordPressRay\execCmd(...func_get_args()); } }
if (!function_exists('fdiv')) { function fdiv() { return \Spatie\WordPressRay\fdiv(...func_get_args()); } }
if (!function_exists('formatErrorMessage')) { function formatErrorMessage() { return \Spatie\WordPressRay\formatErrorMessage(...func_get_args()); } }
if (!function_exists('get_debug_type')) { function get_debug_type() { return \Spatie\WordPressRay\get_debug_type(...func_get_args()); } }
if (!function_exists('includeIfExists')) { function includeIfExists() { return \Spatie\WordPressRay\includeIfExists(...func_get_args()); } }
if (!function_exists('magicSplit')) { function magicSplit() { return \Spatie\WordPressRay\magicSplit(...func_get_args()); } }
if (!function_exists('mb_check_encoding')) { function mb_check_encoding() { return \Spatie\WordPressRay\mb_check_encoding(...func_get_args()); } }
if (!function_exists('mb_convert_case')) { function mb_convert_case() { return \Spatie\WordPressRay\mb_convert_case(...func_get_args()); } }
if (!function_exists('mb_convert_encoding')) { function mb_convert_encoding() { return \Spatie\WordPressRay\mb_convert_encoding(...func_get_args()); } }
if (!function_exists('mb_convert_variables')) { function mb_convert_variables() { return \Spatie\WordPressRay\mb_convert_variables(...func_get_args()); } }
if (!function_exists('mb_decode_mimeheader')) { function mb_decode_mimeheader() { return \Spatie\WordPressRay\mb_decode_mimeheader(...func_get_args()); } }
if (!function_exists('mb_detect_encoding')) { function mb_detect_encoding() { return \Spatie\WordPressRay\mb_detect_encoding(...func_get_args()); } }
if (!function_exists('mb_detect_order')) { function mb_detect_order() { return \Spatie\WordPressRay\mb_detect_order(...func_get_args()); } }
if (!function_exists('mb_encode_mimeheader')) { function mb_encode_mimeheader() { return \Spatie\WordPressRay\mb_encode_mimeheader(...func_get_args()); } }
if (!function_exists('mb_encoding_aliases')) { function mb_encoding_aliases() { return \Spatie\WordPressRay\mb_encoding_aliases(...func_get_args()); } }
if (!function_exists('mb_get_info')) { function mb_get_info() { return \Spatie\WordPressRay\mb_get_info(...func_get_args()); } }
if (!function_exists('mb_http_input')) { function mb_http_input() { return \Spatie\WordPressRay\mb_http_input(...func_get_args()); } }
if (!function_exists('mb_http_output')) { function mb_http_output() { return \Spatie\WordPressRay\mb_http_output(...func_get_args()); } }
if (!function_exists('mb_internal_encoding')) { function mb_internal_encoding() { return \Spatie\WordPressRay\mb_internal_encoding(...func_get_args()); } }
if (!function_exists('mb_language')) { function mb_language() { return \Spatie\WordPressRay\mb_language(...func_get_args()); } }
if (!function_exists('mb_list_encodings')) { function mb_list_encodings() { return \Spatie\WordPressRay\mb_list_encodings(...func_get_args()); } }
if (!function_exists('mb_output_handler')) { function mb_output_handler() { return \Spatie\WordPressRay\mb_output_handler(...func_get_args()); } }
if (!function_exists('mb_parse_str')) { function mb_parse_str() { return \Spatie\WordPressRay\mb_parse_str(...func_get_args()); } }
if (!function_exists('mb_stripos')) { function mb_stripos() { return \Spatie\WordPressRay\mb_stripos(...func_get_args()); } }
if (!function_exists('mb_stristr')) { function mb_stristr() { return \Spatie\WordPressRay\mb_stristr(...func_get_args()); } }
if (!function_exists('mb_strlen')) { function mb_strlen() { return \Spatie\WordPressRay\mb_strlen(...func_get_args()); } }
if (!function_exists('mb_strpos')) { function mb_strpos() { return \Spatie\WordPressRay\mb_strpos(...func_get_args()); } }
if (!function_exists('mb_strrchr')) { function mb_strrchr() { return \Spatie\WordPressRay\mb_strrchr(...func_get_args()); } }
if (!function_exists('mb_strrichr')) { function mb_strrichr() { return \Spatie\WordPressRay\mb_strrichr(...func_get_args()); } }
if (!function_exists('mb_strripos')) { function mb_strripos() { return \Spatie\WordPressRay\mb_strripos(...func_get_args()); } }
if (!function_exists('mb_strrpos')) { function mb_strrpos() { return \Spatie\WordPressRay\mb_strrpos(...func_get_args()); } }
if (!function_exists('mb_strstr')) { function mb_strstr() { return \Spatie\WordPressRay\mb_strstr(...func_get_args()); } }
if (!function_exists('mb_strtolower')) { function mb_strtolower() { return \Spatie\WordPressRay\mb_strtolower(...func_get_args()); } }
if (!function_exists('mb_strtoupper')) { function mb_strtoupper() { return \Spatie\WordPressRay\mb_strtoupper(...func_get_args()); } }
if (!function_exists('mb_strwidth')) { function mb_strwidth() { return \Spatie\WordPressRay\mb_strwidth(...func_get_args()); } }
if (!function_exists('mb_substitute_character')) { function mb_substitute_character() { return \Spatie\WordPressRay\mb_substitute_character(...func_get_args()); } }
if (!function_exists('mb_substr')) { function mb_substr() { return \Spatie\WordPressRay\mb_substr(...func_get_args()); } }
if (!function_exists('mb_substr_count')) { function mb_substr_count() { return \Spatie\WordPressRay\mb_substr_count(...func_get_args()); } }
if (!function_exists('parseArgs')) { function parseArgs() { return \Spatie\WordPressRay\parseArgs(...func_get_args()); } }
if (!function_exists('preg_last_error_msg')) { function preg_last_error_msg() { return \Spatie\WordPressRay\preg_last_error_msg(...func_get_args()); } }
if (!function_exists('preprocessGrammar')) { function preprocessGrammar() { return \Spatie\WordPressRay\preprocessGrammar(...func_get_args()); } }
if (!function_exists('ray')) { function ray() { return \Spatie\WordPressRay\ray(...func_get_args()); } }
if (!function_exists('rd')) { function rd() { return \Spatie\WordPressRay\rd(...func_get_args()); } }
if (!function_exists('regex')) { function regex() { return \Spatie\WordPressRay\regex(...func_get_args()); } }
if (!function_exists('removeTrailingWhitespace')) { function removeTrailingWhitespace() { return \Spatie\WordPressRay\removeTrailingWhitespace(...func_get_args()); } }
if (!function_exists('resolveMacros')) { function resolveMacros() { return \Spatie\WordPressRay\resolveMacros(...func_get_args()); } }
if (!function_exists('resolveNodes')) { function resolveNodes() { return \Spatie\WordPressRay\resolveNodes(...func_get_args()); } }
if (!function_exists('resolveStackAccess')) { function resolveStackAccess() { return \Spatie\WordPressRay\resolveStackAccess(...func_get_args()); } }
if (!function_exists('sapi_windows_vt100_support')) { function sapi_windows_vt100_support() { return \Spatie\WordPressRay\sapi_windows_vt100_support(...func_get_args()); } }
if (!function_exists('showHelp')) { function showHelp() { return \Spatie\WordPressRay\showHelp(...func_get_args()); } }
if (!function_exists('spl_object_id')) { function spl_object_id() { return \Spatie\WordPressRay\spl_object_id(...func_get_args()); } }
if (!function_exists('str_contains')) { function str_contains() { return \Spatie\WordPressRay\str_contains(...func_get_args()); } }
if (!function_exists('stream_isatty')) { function stream_isatty() { return \Spatie\WordPressRay\stream_isatty(...func_get_args()); } }
if (!function_exists('utf8_decode')) { function utf8_decode() { return \Spatie\WordPressRay\utf8_decode(...func_get_args()); } }
if (!function_exists('utf8_encode')) { function utf8_encode() { return \Spatie\WordPressRay\utf8_encode(...func_get_args()); } }

return $loader;
